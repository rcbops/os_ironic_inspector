---
# Copyright 2014, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Create the system group
  group:
    name: "{{ ironic_inspector_system_group_name }}"
    state: "present"
    system: "yes"

- name: Remove old key file(s) if found
  file:
    path: "{{ item }}"
    state: "absent"
  with_items:
    - "{{ ironic_inspector_system_home_folder }}/.ssh/authorized_keys"
    - "{{ ironic_inspector_system_home_folder }}/.ssh/id_rsa"
    - "{{ ironic_inspector_system_home_folder }}/.ssh/id_rsa.pub"
  when: ironic_inspector_recreate_keys | bool

- name: Create the ironic inspector system user
  user:
    name: "{{ ironic_inspector_system_user_name }}"
    group: "{{ ironic_inspector_system_group_name }}"
    comment: "{{ ironic_inspector_system_comment }}"
    shell: "{{ ironic_inspector_system_shell }}"
    system: "yes"
    createhome: "yes"
    home: "{{ ironic_inspector_system_home_folder }}"
    generate_ssh_key: "yes"

- name: Create ironic inspector dir
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner|default(ironic_inspector_system_user_name) }}"
    group: "{{ item.group|default(ironic_inspector_system_group_name) }}"
    mode: "{{ item.mode|default('0755') }}"
  with_items:
    - { path: "/openstack/venvs", mode: "0755", owner: "root", group: "root" }
    - { path: "/etc/ironic-inspector" }
    - { path: "/etc/ironic-inspector/rootwrap.d" }
    - { path: "/etc/sudoers.d", mode: "0750", owner: "root", group: "root" }
    - { path: "/var/cache/ironic-inspector" }
    - { path: "{{ ironic_inspector_system_home_folder }}" }
    - { path: "{{ ironic_inspector_system_home_folder }}/.ssh", mode: "0700" }
    - { path: "{{ ironic_inspector_lock_path }}" }
    - { path: "/var/run/ironic-inspector" }

- name: Test for log directory or link
  shell: |
    if [ -h "{{ ironic_inspector_system_log_folder }}"  ]; then
      chown -h {{ ironic_inspector_system_user_name }}:{{ ironic_inspector_system_group_name }} "{{ ironic_inspector_system_log_folder }}"
      chown -R {{ ironic_inspector_system_user_name }}:{{ ironic_inspector_system_group_name }} "$(readlink {{ ironic_inspector_system_log_folder }} )"
    else
      exit 1
    fi
  register: log_dir
  failed_when: false
  changed_when: log_dir.rc != 0

- name: Create ironic inspector log dir
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner|default(ironic_inspector_system_user_name) }}"
    group: "{{ item.group|default(ironic_inspector_system_group_name) }}"
    mode: "{{ item.mode|default('0755') }}"
  with_items:
    - { path: "{{ ironic_inspector_system_log_folder }}" }
  when: log_dir.rc != 0
